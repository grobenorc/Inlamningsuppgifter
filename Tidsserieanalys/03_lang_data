setwd("C:/Users/claes/OneDrive/Universitet/Statistik Fortsättningskurs/STAH14 Tidsserieanalys/Inlämningar/Inlämningsuppgift_1")

library(tidyverse)
library(lubridate)
library(ggpubr)
library(ggseas)
library(ggthemes)
library(ggfortify)
library(ggplottimeseries)
library(seasonal)
library(forecast)
library(TSA)
library(TTR)
library(tseries)
library(fpp2)
library(TSstudio)
library(scales)
library(graphics)
library(IRdisplay)
library(DescTools)
library(stargazer)
library(xtable)
library(fitdistrplus)
library(reshape2)
library(egg)



#----------------------------------------------------------#
#                  Datainladdning                          #
#----------------------------------------------------------#


##### Grundobjekt av data ----
data_dag     <- read_rds("Data/r_datafiler/lang/lang.data.dag.rds")
data_vecka   <- read_rds("Data/r_datafiler/lang/lang.data.vecka.rds")
data_manad   <- read_rds("Data/r_datafiler/lang/lang.data.manad.rds")

#### Snabb lm -----
lm_dag <- lm(Medeltemperatur ~ time(Datum), data = data_dag)

lm_df_vecka <- data_vecka %>% mutate(Datum = as.Date(paste0("01-01-", År), format = "%d-%m-%Y") + weeks(as.numeric(Vecka) - 1))
lm_vecka <- lm(Medeltemperatur ~ time(Datum), data = lm_df_vecka)

lm_df_manad <- data_manad %>% mutate(Datum = as.Date(paste0("01-01-", År), format = "%d-%m-%Y") + months(as.numeric(Månad) - 1))
lm_manad <- lm(Medeltemperatur ~ time(Datum), data = lm_df_manad)

stargazer(list(lm_dag, lm_vecka, lm_manad), 
          caption = "Regressionsstatistik enkel linjär regression, alla år med olika grupperingar", 
          label = "tab:summeringsstatistik_lm_alla_ar",
          font.size = "footnotesize")

rm(lm_dag, lm_df_vecka, lm_vecka, lm_df_manad, lm_manad)

# Tar här enbart ut för till för förra året då vi skall kunna se hur väll modellerna passar
data_dag_train    <- data_dag %>% filter(year(Datum) < 2021)
data_vecka_train  <- data_vecka %>% mutate(År = as.numeric(as.character(År))) %>% filter(År < 2021) %>% mutate(År = as.factor(År))
data_manad_train  <- data_manad %>% mutate(År = as.numeric(as.character(År))) %>% filter(År < 2021) %>% mutate(År = as.factor(År))


##### Tidsserieobjekt Y, Y_t-1 -----
Y_dag_train   <- ts(data_dag_train$Medeltemperatur, start = c(1950,1), frequency = 365.25)
Y_vecka_train <- ts(data_vecka_train$Medeltemperatur, start = c(1950,1), frequency = 53)
Y_manad_train <- ts(data_manad_train$Medeltemperatur, start = c(1950,1), frequency = 12)

DY_dag_train   <- ts(diff(data_dag_train$Medeltemperatur), start = c(1950,1), frequency = 365.25)
DY_vecka_train <- ts(diff(data_vecka_train$Medeltemperatur), start = c(1950,1), frequency = 53)
DY_manad_train <- ts(diff(data_manad_train$Medeltemperatur), start = c(1950,1), frequency = 12)



##### Tidsplot över hela intervallet Y, Y_t-1 -----
autoplot(Y_dag_train) + geom_smooth(method = "lm") + ggtitle("Temperatur Östersund 1950 - 2020") + ylab("Temperatur") + theme_minimal()
autoplot(Y_vecka_train) + geom_smooth(method = "lm") + ggtitle("Temperatur Östersund 1950 - 2020") + ylab("Temperatur") + theme_minimal()
autoplot(Y_manad_train) + geom_smooth(method = "lm") + ggtitle("Temperatur Östersund 1950 - 2020") + ylab("Temperatur") + theme_minimal()

autoplot(DY_dag_train) + geom_smooth(method = "lm") + ggtitle("Temperatur Östersund 1950 - 2020") + ylab("Temperatur") + theme_minimal()
autoplot(DY_vecka_train) + geom_smooth(method = "lm") + ggtitle("Temperatur Östersund 1950 - 2020") + ylab("Temperatur") + theme_minimal()
autoplot(DY_manad_train) + geom_smooth(method = "lm") + ggtitle("Temperatur Östersund 1950 - 2020") + ylab("Temperatur") + theme_minimal()


##### Hitta seasonality Y, Y_t-1 -----
ggseasonplot(Y_vecka_train) + theme_minimal()
ggseasonplot(Y_manad_train) + theme_minimal()

ggseasonplot(DY_vecka_train) + theme_minimal()
ggseasonplot(DY_manad_train) + theme_minimal()


##### Subseries plot -----
ggsubseriesplot(Y_vecka_train) + theme_minimal()
ggsubseriesplot(Y_manad_train) + theme_minimal()

ggsubseriesplot(DY_vecka_train) + theme_minimal()
ggsubseriesplot(DY_manad_train) + theme_minimal()




# Vår serie, Y, har seasonality och möjligen en svag trend
# Vi använder den differentierade serien för att bli av med trenden
# Den differentierade serien har fortfarande stark seasonality
#


##### Modellering ------

### Vi sätter benchmark SNAIVE ###
fit_snaive_Y <- snaive(Y_manad_train) # Residual sd: 4.0059 
print(summary(fit_snaive_Y))
checkresiduals(fit_snaive_Y) # Då vi har autokorrelation i Residualerna finns en bättre modell

fit_snaive_DY <- snaive(DY_manad_train) # Residual sd: 4.0059 
print(summary(fit_snaive_DY))
checkresiduals(fit_snaive_DY) # Då vi har autokorrelation i Residualerna finns en bättre modell




### Vi provar exponential smoothing modell ETS ###
fit_ets_Y <- ets(Y_manad_train, trace = TRUE) # sigma:  2.3903, alltså passar denna bättre än fit_naive
print(summary(fit_ets_Y))
checkresiduals(fit_ets_Y) # Mycket bättre autokorrelation i residualerna

fit_ets_DY <- ets(DY_manad_train) # sigma:  2.3903, alltså passar denna bättre än fit_naive
print(summary(fit_ets_DY))
checkresiduals(fit_ets_DY) # Mycket bättre autokorrelation i residualerna




-------------------------------------------------
###         Vi provar ARIMA modell            ###
###                                           ###
###        Det här förutsätter att vi har     ###
###        en stationär tidsserie             ###


# Först gör vi ett adf-test för att se så att tidsserierna är stationära
adf.test(Y_manad_train) # Den är stationär
adf.test(DY_manad_train) # Den är stationär

# Nu kan vi gå vidare med modellen och göra en ARIMA-modell

fit_arima_Y   <- auto.arima(Y_manad_train, D = 1, stepwise = FALSE, approximation = FALSE, trace = TRUE) 
print(summary(fit_arima_Y)) # sigma^2 = 6.765 = sqrt(6.765) = 2.6 (ETS är bättre)
checkresiduals(fit_arima_Y) # Mycket bättre autokorrelation i residualerna


fit_arima_DY  <- auto.arima(Y_manad_train, d = 1, D = 1, stepwise = FALSE, approximation = FALSE, trace = TRUE) 
print(summary(fit_arima_DY)) # sigma^2 = 7.491 = sqrt(7.491) = 2.736969 (ETS är bättre)
checkresiduals(fit_arima_DY) # Mycket bättre autokorrelation i residualerna



##### Modeller och modellvalidering -----

### Vi tar först ut sigma och gör en latex tabell av standardfelen
fit_ets_Y$sigma2
fit_ets_DY$sigma2
fit_arima_DY$sigma2
fit_arima_Y$sigma2
tabell_modeller_sd <- xtable(cbind(rbind("ETS_Y", "ETS_DY", "ARIMA_Y", "ARIMA_DY"), 
                                   round(rbind(sqrt(fit_ets_Y$sigma2), sqrt(fit_ets_DY$sigma2), sqrt(fit_arima_DY$sigma2), sqrt(fit_arima_Y$sigma2)), 3)), 
                             caption = "Sd per modell")
tabell_modeller_sd


diagnostik_plottar <- function(modell){
  # Plottar
  qqplot <- ggplot(data.frame(residuals = residuals(modell)), aes(sample = residuals)) +
    stat_qq() +
    stat_qq_line() +
    labs(title = "QQ-plot", x = "Theoretical Quantiles", y = "Sample Quantiles") +
    theme_minimal() + 
    theme(axis.line = element_line(linewidth = 2, colour = "grey80"),
          panel.ontop = FALSE)
    
  histogramplot <- ggplot(data.frame(residuals = residuals(modell)), aes(x = residuals)) +
    geom_histogram(binwidth = 0.5, aes(y=..density..), fill='grey80', color='black') +
    geom_density(color='red', linewidth = 1, adjust = 1.5) + 
    geom_rug() + 
    labs(title = "Histogram", x = "Residualer", y = "Densitet") +
    theme_minimal() +
    theme(axis.line = element_line(linewidth = 2, colour = "grey80"),
          panel.ontop = FALSE)
  
  acfplot <- ggAcf(residuals(modell)) +
    labs(title = "ACF") + 
    theme_minimal() +
    theme(axis.line = element_line(linewidth = 2, colour = "grey80"),
          panel.ontop = FALSE)
  
  pacfplot <- ggPacf(residuals(modell)) +
    labs(title = "PACF") + 
    theme_minimal() +
    theme(axis.line = element_line(linewidth = 2, colour = "grey80"),
          panel.ontop = FALSE)
  
  arrange <- ggpubr::ggarrange(qqplot, histogramplot, acfplot, pacfplot,
                         ncol = 2, nrow = 2)
  p.arrange <- annotate_figure(arrange, top = text_grob(paste("Diagnostikplottar av", deparse(substitute(modell))), 
                                                     color = "Black", face = "bold", size = 14))  
  
  save_objekt <- paste0("img/Langsiktig/modell/lang_validering_", deparse(substitute(modell)), ".png")
  ggsave(save_objekt, p.arrange)
  p.arrange
}


##### Prediktionsförmåga -----
data_dag_test   <- data_dag %>% filter(year(Datum) > 2020)
data_vecka_test  <- data_vecka %>% mutate(År = as.numeric(as.character(År))) %>% filter(År > 2020) %>% mutate(År = as.factor(År))
data_manad_test  <- data_manad %>% mutate(År = as.numeric(as.character(År))) %>% filter(År > 2020) %>% mutate(År = as.factor(År)) 



### Snaive

### ETS
PRESS_ETS_Y  <- sum((data_manad_test$Medeltemperatur - forecast(fit_ets_Y, h = 22)$mean)^2)
PRESS_ETS_DY <- sum((data_manad_test$Medeltemperatur - forecast(fit_ets_DY, h = 22)$mean)^2)



### ARIMA
PRESS_ARIMA_Y  <- sum((data_manad_test$Medeltemperatur - forecast(fit_arima_Y, h = 22)$mean)^2)
PRESS_ARIMA_DY <- sum((data_manad_test$Medeltemperatur - forecast(fit_arima_DY, h = 22)$mean)^2)


### Latex tabell PRESS Modeller
tabell_modeller_PRESS <- xtable(round(rbind(PRESS_ETS_Y, PRESS_ETS_DY, PRESS_ARIMA_Y, PRESS_ARIMA_DY), 3), 
                                label = "tab:press_modeller",
                                caption = "PRESS-värde")
tabell_modeller_PRESS



###### Forecasting ------

### Skattat vs_ verklighet på test_data
forecast_modell_vs_verkligt_varde <- function(modell){
  all_data <- data.frame(cbind(verklig_data = ts(data_manad_test$Medeltemperatur, start = c(2021,1), frequency = 12), 
                               forecast = ts(data.frame(forecast(modell, 22)), start = c(2021,1), frequency = 12)))
  
  plot_skattning_vs_real <- ggplot(all_data, aes(x = as.Date(paste0(data_manad_test$År,"-", data_manad_test$Månad, "-01")))) + 
    geom_ribbon(aes(ymin = forecast.Lo.80, ymax = forecast.Hi.80, fill = "80% Konfidens"), alpha = 0.8) + 
    geom_ribbon(aes(ymin = forecast.Lo.95, ymax = forecast.Hi.95, fill = "95% Konfidens"), alpha = 0.2) +
    geom_line(aes(y = forecast.Point.Forecast, color = "Skattat värde")) +
    geom_point(aes(y = forecast.Point.Forecast,color = "Skattat värde"), size = 2) +
    geom_line(aes(y = verklig_data,color = "Verkligt värde"), linewidth = 1) +
    geom_point(aes(y = verklig_data,color = "Verkligt värde"), size = 2) +
    scale_fill_manual(name = "Konfidens", values = c("80% Konfidens" = "lightblue", "95% Konfidens" = "blue")) +
    scale_color_manual(name = "Värden", values = c("Skattat värde" = "black", "Verkligt värde" = "orange")) +
    labs(title = paste("Skattat vs. verkligt värde:", as.character(modell)), x = "Datum", y = "Temperatur") +
    theme_minimal()
  
  save_objekt <- paste0("img/Langsiktig/forecast/skattat_verklig_testdata_manad_", deparse(substitute(modell)), ".png")
  ggsave(save_objekt, plot_skattning_vs_real)
  plot_skattning_vs_real
}


forecast_framover_modell <- function(modell){
  forecast_plot <- autoplot(forecast(modell, h = 12*10), include = 10+12*5) + 
    labs(x = "Årtal", y = "Temperatur") + 
    theme_minimal() 
  
  save_objekt <- paste0("img/Langsiktig/forecast/forecast_tio_ar_manad_", deparse(substitute(modell)), ".png")
  ggsave(save_objekt, forecast_plot)
}


##### Förändringar över tid -----
rm(list=ls())


data_dag     <- read_rds("Data/r_datafiler/lang/lang.data.dag.rds")
data_vecka   <- read_rds("Data/r_datafiler/lang/lang.data.vecka.rds")
data_manad   <- read_rds("Data/r_datafiler/lang/lang.data.manad.rds")
data_dag_innan_1970 <- data_dag %>% filter(year(Datum) < 1970)
data_dag_efter_2002 <- data_dag %>% filter(year(Datum) > 2001)
data_dag_sorterad <- rbind(data_dag_efter_2002, data_dag_innan_1970) %>% mutate(Grupp = ifelse(year(Datum) > 2001, " >2001", "  <1970"), Arstid = ifelse(month(Datum) < 5 | month(Datum) > 8, "Vinter", "Sommar") )
Y_dag_innan_1970 <- ts(data_dag_innan_1970$Medeltemperatur, start = 1950, end = c(1970), frequency = 365.25)
Y_dag_efter_2002 <- ts(data_dag_efter_2002$Medeltemperatur, start = 2002, end =c(2022,3), frequency = 365.25)
residual_linear_df <- data_dag_sorterad %>% group_by(Grupp) %>% mutate(std_change = (diff1 - mean(diff1, na.rm = TRUE)) / sd(diff1, na.rm = TRUE))




ttest_mean <- t.test(data_dag_efter_2002$Medeltemperatur, data_dag_innan_1970$Medeltemperatur) # T-test av medelvärde mellan de olika tidsperioderna
ttest_mean_tabell <- xtable(matrix(c("Two Sample t-test", "", "", "", 
                                     "data: efter_2002 och innan_1970", 
                                     "t = 11.068", "df = 14698", "p-value < 2.2e-16",
                                     "alternative hypothesis: true difference in means is not equal to 0", 
                                     "95 CI:", "1.316638 1.883331", 
                                     "sample estimates:", "mean of x", "4.030858", "mean of y", "2.430874"), 
                                   ncol = 2, byrow = TRUE))

latex_ttest_mean <- print(xtable(ttest_mean_tabell, type = "latex", caption = "T-test result"), include.rownames = F, include.colnames = F) # Gör här en latex output
bartlett_test_var <- bartlett.test(Medeltemperatur ~ Grupp, data = data_dag_sorterad)




### Extremväder över tid ----
residual_linear_df <- data_dag_sorterad %>% group_by(Grupp) %>% mutate(std_change = (diff1 - mean(diff1, na.rm = TRUE)) / sd(diff1, na.rm = TRUE))
fitdistr(x_vinter$Antal, "gamma", start=list(shape=1, rate=1))$estimate
plot(normal_dist)


# Plottar utifrån standardiserade förändring
p_densitet_residualer <- residual_linear_df %>% mutate(sd_abs = abs(std_change)) %>%
  ggplot(aes(x =sd_abs, fill = Grupp)) + # %>% ggplot(residual.linear.df, aes(x=std_change, fill=Grupp)) +
  geom_density(alpha=0.4) + 
  geom_rug(aes(color = Grupp), size = 1) + 
  labs(title = "Densitet av standardiserade förändringar", y = "Densitet") +
  #scale_fill_manual(values = c("#F76D5E", "#FFFFBF")) + 
  theme_minimal() + theme(panel.border = element_rect(fill = NA))


p_densitet_residualer_storre_an_tre <- residual_linear_df %>% mutate(sd_abs = abs(std_change)) %>% filter(sd_abs > 3) %>% 
  ggplot(aes(x =sd_abs, fill = Grupp)) + # %>% ggplot(residual.linear.df, aes(x=std_change, fill=Grupp)) +
  geom_density(alpha=0.4) + 
  geom_rug(aes(color = Grupp), size = 1.5) + 
  labs(title = "Densitet av standardiserade förändringar >3", y = "Densitet") +
  #scale_fill_manual(values = c("#F76D5E", "#FFFFBF")) + 
  theme_minimal() +
  theme(panel.border = element_rect(fill = NA))

p_arrange_densitet_residualer <- ggarrange(p_densitet_residualer, p_densitet_residualer_storre_an_tre, nrow = 2)
ggsave("img/forandring/densitet_forandring_grupperad.png", plot = p_arrange_densitet_residualer)

###### Test data -----
p_residualer_antal_dagar_efter_2002 <- residual_linear_df %>% 
  filter(year(Datum) > 2001) %>% 
  mutate(sd_abs = abs(std_change)) %>% 
  filter(sd_abs >= 3) %>% 
  arrange(Datum) #%>% 
mutate(Antal = as.numeric(Datum) - as.numeric(lag(Datum)))

p_residualer_antal_dagar_efter_2002 <- p_residualer_antal_dagar_efter_2002 %>% mutate(ifelse(year(Datum) == year(Datum), "Ja", "Nej"))


# Antal dagar mellan std.abs som överstiger >3

p_residualer_antal_dagar_efter_2002 <- residual_linear_df %>% 
  filter(year(Datum) > 2001) %>% 
  mutate(sd_abs = abs(std_change)) %>% 
  filter(sd_abs >= 3) %>% 
  arrange(Datum) %>% 
  mutate(Antal = as.numeric(Datum) - as.numeric(lag(Datum))) #%>% 
ggplot(aes(x = Dag, y = Antal))+
  geom_bar(stat = "identity")


ggplot(data = p_residualer_antal_dagar_efter_2002, aes(x=Antal, fill = Arstid)) + 
  geom_bar(aes(y=..count..), stat = "bin") + xlim(c(1, 366))


p_residualer_antal_dagar_grupp <- residual_linear_df %>% 
  mutate(sd_abs = abs(std_change)) %>% 
  filter(sd_abs >= 3) %>% 
  arrange(Datum) %>% 
  mutate(Antal = as.numeric(Datum) - as.numeric(lag(Datum))) %>% 
  ggplot(aes(x=Antal, fill = Grupp)) + 
  geom_bar(aes(y=..count..), stat = "bin") + xlim(c(1, 366)) + labs(title = "Antal dagar sedan standardiserad temperaturförändring >3", x = "Antal dagar", y = "Count") +
  theme_minimal() +
  theme(panel.border = element_rect(fill = NA))

p_residualer_antal_dagar_arstid <- residual_linear_df %>% 
  mutate(sd_abs = abs(std_change)) %>% 
  filter(sd_abs >= 3) %>% 
  arrange(Datum) %>% 
  mutate(Antal = as.numeric(Datum) - as.numeric(lag(Datum))) %>% 
  ggplot(aes(x=Antal, fill = Arstid)) + 
  geom_bar(aes(y=..count..), stat = "bin") + xlim(c(1, 366)) + labs(title = "Antal dagar sedan standardiserad temperaturförändring >3", x = "Antal dagar", y = "Count") +
  theme_minimal() +
  theme(panel.border = element_rect(fill = NA))


ggplot(data = p_residualer_antal_dagar_efter_2002, aes(x = Antal, y = Dag, fill = Grupp)) + 
  geom_bar(stat="identity")# + 
facet_grid( ~Arstid) + theme_bw()


ggplot(data = p_residualer_antal_dagar_efter_2002, aes(x=Antal, fill = Arstid)) + 
  geom_histogram(stat = "bin",binwidth = 1)



#%>% 
ggplot(aes(x =sd_abs, fill = Grupp)) + # %>% ggplot(residual_linear_df, aes(x=std_change, fill=Grupp)) +
  geom_density(alpha=0.4) + 
  geom_rug(aes(color = Arstid), size = 1.5) + 
  labs(title = "Densitet av standardiserade residualer >3", y = "Densitet") +
  #scale_fill_manual(values = c("#F76D5E", "#FFFFBF")) + theme_minimal() +
  theme(panel.border = element_rect(fill = NA))



##### Atnal dagar sedan stora förändringar ------
## Vi tar här ut antalet dagar sedan en stor daglig förändring (standardiserad >3)

# först börjar vi med vinter

p_antal_dagar_vinter <- residual_linear_df %>% filter(Arstid == 'Vinter' & std_change > 3) %>% 
  arrange(År) %>% 
  mutate(diff = abs( (month(Datum)-lag(month(Datum)))),
         diff2 = ifelse(as.numeric(Datum - lag(Datum)) > 200, NA, as.numeric(Datum - lag(Datum))), 
         Året = ifelse(diff > 9, NA, "Ja")) %>% 
  ggplot(aes(x = diff2, fill = Grupp)) + 
  geom_bar(aes(y = ..count..)) +
  labs(x = "Antal dagar", y = "Antal") +
  facet_grid( ~Grupp) + 
  theme_minimal()  + theme(panel.border = element_rect(fill = NA))

p_antal_dagar_vinter_samma <- residual_linear_df %>% filter(Arstid == 'Vinter' & std_change > 3) %>% 
  arrange(År) %>% 
  mutate(diff = abs( (month(Datum)-lag(month(Datum)))),
         diff2 = ifelse(as.numeric(Datum - lag(Datum)) > 200, NA, as.numeric(Datum - lag(Datum))), 
         Året = ifelse(diff > 9, NA, "Ja")) %>% 
  ggplot(aes(x = diff2, fill = Grupp)) + 
  geom_bar(aes(y = ..count..)) +
  labs(title = "Antal dagar sedan standardiserad daglig förändring > 3", subtitle = "Vinterperiod (Sep - Mar)", x = "Antal dagar", y = "Antal") + 
  theme_minimal()  + theme(panel.border = element_rect(fill = NA))

p_arrange_antal_dagar <- ggarrange(p_antal_dagar_vinter_samma, p_antal_dagar_vinter, nrow = 2)
ggsave("img/forandring/antal.dagar.arrange.png", plot = p_arrange_antal_dagar)


res_vinter_summary <- residual_linear_df %>% filter(Arstid == 'Vinter' & std_change > 3) %>% 
  arrange(År) %>% 
  mutate(diff = abs( (month(Datum)-lag(month(Datum)))),
         diff2 = ifelse(as.numeric(Datum - lag(Datum)) > 200, NA, as.numeric(Datum - lag(Datum))), 
         Året = ifelse(diff > 9, NA, "Ja")) %>% 
  group_by(Grupp) %>% 
  summarise(mean = mean(diff2, na.rm = TRUE),
            variance = var(diff2, na.rm = TRUE),
            sd = sd(diff2, na.rm = TRUE),
            n = n())
xtable(res_vinter_summary, caption = "Summeringsstatistik av vinterdata", label = "tab:summeringsstatistik_antal_dagar_vinter")





#### Passning av en gamma-frödelning ? -----
antal_dagar_vinter_data <- residual_linear_df %>% filter(Arstid == 'Vinter' & abs(std_change) > 1.96) %>% 
  arrange(År) %>% 
  mutate(diff = abs( (month(Datum)-lag(month(Datum)))),
         diff2 = ifelse(as.numeric(Datum - lag(Datum)) > 200, NA, as.numeric(Datum - lag(Datum))),
         std_change_abs = abs(std_change)) %>% 
  drop_na(diff2) %>% 
  dplyr::select(Datum, År, Arstid, Månad, Dag, std_change_abs, diff2)    #http://127.0.0.1:31949/graphics/plot_zoom_png?width=1920&height=1032

gamma_fit_1950      <- fitdistr(antal_dagar_vinter_data$diff2[antal_dagar_vinter_data$Datum < 2001], "gamma")
gamma_fit_2002      <- fitdistr(antal_dagar_vinter_data$diff2[antal_dagar_vinter_data$Datum > 2001], "gamma")
gamma_fit_totalt    <- fitdistr(antal_dagar_vinter_data$diff2, "gamma")


gamma_fit_1950    #shape = 0.83767010   , rate = 0.05903691 
gamma_fit_2002    #shape = 0.95120571   , rate = 0.06896301 
gamma_fit_totalt  #shape = 0.878356440  , rate = 0.062588745


# PLottning av empiriska data gentemot fördelningen

p_antal_dagar_vinter <- residual_linear_df %>% filter(Arstid == 'Vinter' & abs(std_change) > 1.96) %>% 
  arrange(År) %>% 
  mutate(diff = abs( (month(Datum)-lag(month(Datum)))),
         diff2 = ifelse(as.numeric(Datum - lag(Datum)) > 200, NA, as.numeric(Datum - lag(Datum)))) %>% 
  drop_na(diff2) %>% 
  ggplot(aes(x = diff2, fill = Grupp)) +
  geom_density(alpha = 0.5) + 
  geom_line(aes(x = 1:length(diff2), y = dgamma(1:length(diff2), gamma_fit_totalt$estimate[1], gamma_fit_totalt$estimate[2])), color = "blue", size = 1) +
  xlim(c(0,100)) + 
  labs(title = "Densitet av antal dagar sedan stor väderförändring", x = "Antal Dagar", y = "Densitet") + 
  theme_minimal() + theme(panel.border = element_rect(fill = NA))

p_antal_dagar_vinter_1950 <- residual_linear_df %>% filter(Arstid == 'Vinter' & abs(std_change) > 1.96 & year(Datum) < 2001) %>% 
  arrange(År) %>% 
  mutate(diff = abs( (month(Datum)-lag(month(Datum)))),
         diff2 = ifelse(as.numeric(Datum - lag(Datum)) > 200, NA, as.numeric(Datum - lag(Datum)))) %>% 
  drop_na(diff2) %>% 
  ggplot(aes(x = diff2)) +
  geom_density(alpha = 0.5,fill ="#FF9999") + 
  geom_line(aes(x = 1:length(diff2), y = dgamma(1:length(diff2), gamma_fit_1950$estimate[1], gamma_fit_1950$estimate[2])), color = "blue", size = 1) +
  xlim(c(0,100)) + 
  labs(x = "Antal Dagar", y = "Densitet") + 
  theme_minimal() + theme(panel.border = element_rect(fill = NA))


p_antal_dagar_vinter_2002 <- residual_linear_df %>% filter(Arstid == 'Vinter' & abs(std_change) > 1.96 & year(Datum) > 2001) %>% 
  arrange(År) %>% 
  mutate(diff = abs( (month(Datum)-lag(month(Datum)))),
         diff2 = ifelse(as.numeric(Datum - lag(Datum)) > 200, NA, as.numeric(Datum - lag(Datum)))) %>% 
  drop_na(diff2) %>% 
  ggplot(aes(x = diff2)) +
  geom_density(alpha = 0.5,fill ="#00BFC4") + 
  geom_line(aes(x = 1:length(diff2), y = dgamma(1:length(diff2), gamma_fit_2002$estimate[1], gamma_fit_2002$estimate[2])), color = "blue", size = 1) +
  xlim(c(0,100)) + 
  labs(x = "Antal Dagar", y = "Densitet") + 
  theme_minimal() + theme(panel.border = element_rect(fill = NA))



p_antal_dagar_vinter
p_antal_dagar_vinter_1950
p_antal_dagar_vinter_2002


p_arrange_antal_dagar_gamma <- ggarrange(p_antal_dagar_vinter,
                                         ggarrange(p_antal_dagar_vinter_1950, p_antal_dagar_vinter_2002, ncol = 2),
                                         nrow = 2)

ggsave("img/forandring/antal.dagar.arrange.densitet.gamma.png", plot = p_arrange_antal_dagar_gamma)


gamma_fordelning_uppskattning <- cbind(rbind("<1950", ">2002", "Alla år"),
                                       rbind(gamma_fit_1950$estimate, gamma_fit_2002$estimate, gamma_fit_totalt$estimate), 
                                       rbind(gamma_fit_1950$n, gamma_fit_2002$n, gamma_fit_totalt$n),
                                       rbind(gamma_fit_1950$loglik, gamma_fit_2002$loglik, gamma_fit_totalt$loglik)) 

latex_gamma_fordelning_antal_dagar <- xtable(gamma_fordelning_uppskattning)  
latex_gamma_fordelning_antal_dagar  




ttest_antal_dagar_data <- residual_linear_df %>% filter(Arstid == 'Vinter' & abs(std_change) > 1.96 & (year(Datum) > 2001 | year(Datum) < 1971)) %>% 
  arrange(År) %>% 
  mutate(diff = abs( (month(Datum)-lag(month(Datum)))),
         diff2 = ifelse(as.numeric(Datum - lag(Datum)) > 200, NA, as.numeric(Datum - lag(Datum))))


ttest_antal_dagar <- data.frame(t.test(diff2 ~ Grupp, data = ttest_antal_dagar_data))

ttest_antal_dagar_tabell <- xtable(matrix(c("Two Sample t-test", "", "", "", 
                                            "data: efter_2002 och innan_1970", 
                                            "t = -2.4685", "df = 577.34", "p-value < 0.01386",
                                            "alternative hypothesis: true difference in means is not equal to 0", 
                                            "95% CI:", "-7.9654215 -0.9064502", 
                                            "sample estimates:", "mean of x", "8.598985", "mean of y", "13.034921"), 
                                          ncol = 2, byrow = TRUE))

latex_ttest_antal_dagar <- print(xtable(ttest_antal_dagar_tabell, type = "latex", caption = "T-test result"), include.rownames = F, include.colnames = F) # Gör här en latex output
bartlett_test_var <- bartlett.test(Medeltemperatur ~ Grupp, data = data_dag_sorterad)





# Densitetsplottar av temperatur jÃ¤mfÃ¶relse mellan såsonger
p_jamfor_density_medeltemperatur_sasong <- ggplot(data_dag_sorterad, aes(x = Medeltemperatur, fill = Arstid)) +
  geom_density(alpha = 0.5) + 
  scale_fill_manual(values = c("#F76D5E", "#FFFFBF")) +
  xlab("Medeltemperatur") +
  ylab("Density")
p_jamfor_density_medeltemperatur_sasong



p_dag_std_change <- ggplot(residual_linear_df, aes(x=std_change, fill=Grupp)) +
  geom_density(alpha=0.4) +
  scale_fill_manual(values = c("#F76D5E", "#FFFFBF")) +
  geom_rug() +  facet_grid( ~Grupp) + theme_bw()

